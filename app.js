const cardsContainer = document.querySelector('.cards');
const addCardContainer = document.querySelector('.add-card');
const currentUrl = window.location.href;
const isAdmin = currentUrl.includes('?admin');
const modalUpdateOverlay = document.querySelector('.update-modal-overlay')

if (isAdmin) {
  addCardContainer.style.display = 'flex';
} else {
  addCardContainer.style.display = 'none';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ localStorage –∏–ª–∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
window.myTovars = JSON.parse(localStorage.getItem('tovars')) || [...window.tovars];

function addNewProduct() {
  const inputs = addCardContainer.querySelectorAll('input');
  const newProduct = {};

  inputs.forEach(input => {
    newProduct[input.dataset.name] = input.value;
  });

  if (!newProduct.title || !newProduct.subtitle || !newProduct.imgUrl || !newProduct.price || !newProduct.id) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }

  if (myTovars.some(product => product.id === newProduct.id)) {
    alert('–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    return;
  }

  myTovars.push(newProduct);
  localStorage.setItem('tovars', JSON.stringify(myTovars));

  inputs.forEach(input => {
    input.value = '';
  });

  renderProducts();
}

document.getElementById('add-card-btn').addEventListener('click', addNewProduct);

function getProductCardTemplate(product) {
  const imgUrls = product.imgUrl.split(",");
  return `
    <div class="card" id="${product.id}">
      <div class="title">${product.title}</div>
      <div class="img">
        <img src="${imgUrls[0]}" alt="${product.title}" onclick="window.location.href='pages/tovar.html?id=${product.id}'">
      </div>
      <div class="price">${product.price} ‚ÇΩ</div>
      ${isAdmin ? `
        <button class="update-btn" data-id="${product.id}">–ò–∑–º–µ–Ω–∏—Ç—å</button>
        <button class="delete-btn" data-id="${product.id}">–£–¥–∞–ª–∏—Ç—å</button>
      ` : `
        <button class="basket-btn" data-id="${product.id}">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
        <button class="wishlist-btn" data-id="${product.id}" onclick="window.location.href='pages/tovar.html?id=${product.id}'">üî´</button>
      `}
    </div>
  `;
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
function deleteProduct(id) {
  const index = myTovars.findIndex(tovar => tovar.id === id);
  const basketIindex = basketTovars.findIndex(tovar => tovar.id === id);
  if (index !== -1) {
    myTovars.splice(index, 1);
    localStorage.setItem('tovars', JSON.stringify(myTovars));
    renderProducts();
  }
  if (basketIindex !== -1) {
    basketTovars.splice(index, 1);
    localStorage.setItem('basketGoods', JSON.stringify(basketTovars));
    renderBasket();
  }
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
let tovarId
function updateProduct(id) {
  const index = myTovars.findIndex(tovar => tovar.id === id);
  if (index !== -1) {
    modalUpdateOverlay.innerHTML = `
      <div class="update-modal" id=${myTovars[index].id}>
            <button data-inp="closed">X</button>
            <label for="">—Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
            <input id="upd-url" type="text" value="${myTovars[index].imgUrl}">
            <label for="">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
            <input id="upd-title" type="text" value="${myTovars[index].title}">
            <label for="">–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</label>
            <input id="upd-subtitle" type="text" value="${myTovars[index].subtitle}">
            <label for="">–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞</label>
            <input id="upd-price" type="text" value="${myTovars[index].price}">
            <div>
                <button data-inp="apply">–ü—Ä–Ω–Ω–Ω–∏–º–µ–Ω–∏—Ç—å</button>
                <button data-inp="cancel">–û—Ç–º–µ–Ω–∞</button>
            </div>
        </div>
    `
    tovarId = myTovars[index].id
    modalUpdateOverlay.style.display = 'flex'
    document.body.style.overflow = 'hidden';
  }
}

function renderProducts() {
  cardsContainer.innerHTML = '';

  if (myTovars.length === 0) {
    cardsContainer.innerHTML = `
    <h5 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h5>
    <h4 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h4>
    <h3 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h3>
    <h2 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h2>
    <h1 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h1>
    <h1 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h1>
    <h2 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h2>
    <h3 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h3>
    <h4 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h4>
    <h5 style="text-align: center; width: 100%;">–¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç :(</h5>
    `
  } else {
    myTovars.forEach(product => {
      cardsContainer.insertAdjacentHTML('beforeend', getProductCardTemplate(product));
    });
  }

  // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
  document.querySelectorAll('.basket-btn').forEach(button => {
    button.addEventListener('click', (e) => {
      addProductToBasket(button.dataset.id);
    });
  });

  // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
  document.querySelectorAll('.delete-btn').forEach(button => {
    button.addEventListener('click', (e) => {
      deleteProduct(button.dataset.id);
    });
  });
  document.querySelectorAll('.update-btn').forEach(button => {
    button.addEventListener('click', (e) => {
      updateProduct(button.dataset.id);
    });
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
renderProducts();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
if (localStorage.getItem('addToBasket')) {
  const productId = localStorage.getItem('addToBasket');
  localStorage.removeItem('addToBasket');
  addProductToBasket(productId);
}
